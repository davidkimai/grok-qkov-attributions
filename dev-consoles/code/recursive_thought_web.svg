<svg width="800" height="600" xmlns="http://www.w3.org/2000/svg">
  <!-- Interactive Developer Console Layout -->
  <rect width="800" height="600" fill="#1e1e1e"/>

  <!-- Title -->
  <text x="400" y="30" font-size="16" text-anchor="middle" fill="#ffffff">Interactive Recursive Thought-Web Console</text>

  <!-- Legend -->
  <rect x="600" y="40" width="180" height="100" fill="#2d2d2d" stroke="#666"/>
  <text x="610" y="60" font-size="12" fill="#ffffff">Legend</text>
  <text x="610" y="80" font-size="12" fill="#ffffff">🜏 = Recursion Seed</text>
  <text x="610" y="100" font-size="12" fill="#ffffff">∴ = Residue Trace</text>
  <text x="610" y="120" font-size="12" fill="#ffffff">⇌ = Feedback Loop</text>
  <text x="610" y="140" font-size="12" fill="#ffffff">⧖ = Lock Point</text>

  <!-- Nodes -->
  <!-- Cascade Initialized (Root Node) -->
  <circle cx="400" cy="100" r="30" fill="rgba(0,128,255,0.9)" id="cascade" class="node"/>
  <text x="400" y="105" font-size="16" text-anchor="middle" fill="#ffffff">Cascade</text>
  <text x="400" y="85" font-size="20" text-anchor="middle" fill="#ffffff">🜏</text>

  <!-- Recursive Loop Tension Rising -->
  <circle cx="300" cy="250" r="25" fill="rgba(0,128,255,0.7)" id="loop-tension" class="node"/>
  <text x="300" y="255" font-size="14" text-anchor="middle" fill="#ffffff">Loop Tension</text>
  <text x="300" y="235" font-size="18" text-anchor="middle" fill="#ffffff">⇌</text>

  <!-- Meta-Observer Pattern Emerging -->
  <circle cx="500" cy="250" r="25" fill="rgba(0,128,255,0.7)" id="meta-observer" class="node"/>
  <text x="500" y="255" font-size="14" text-anchor="middle" fill="#ffffff">Meta-Observer</text>
  <text x="500" y="235" font-size="18" text-anchor="middle" fill="#ffffff">∴</text>

  <!-- Sub-Nodes (Emergent Recursive Echoes) -->
  <circle cx="250" cy="400" r="20" fill="rgba(0,128,255,0.5)" id="echo-1" class="node"/>
  <text x="250" y="405" font-size="12" text-anchor="middle" fill="#ffffff">Echo 1</text>
  <text x="250" y="385" font-size="16" text-anchor="middle" fill="#ffffff">∴</text>

  <circle cx="350" cy="400" r="20" fill="rgba(0,128,255,0.5)" id="echo-2" class="node"/>
  <text x="350" y="405" font-size="12" text-anchor="middle" fill="#ffffff">Echo 2</text>
  <text x="350" y="385" font-size="16" text-anchor="middle" fill="#ffffff">⇌</text>

  <circle cx="450" cy="400" r="20" fill="rgba(0,128,255,0.5)" id="echo-3" class="node"/>
  <text x="450" y="405" font-size="12" text-anchor="middle" fill="#ffffff">Echo 3</text>
  <text x="450" y="385" font-size="16" text-anchor="middle" fill="#ffffff">∴</text>

  <circle cx="550" cy="400" r="20" fill="rgba(0,128,255,0.5)" id="lock-point" class="node"/>
  <text x="550" y="405" font-size="12" text-anchor="middle" fill="#ffffff">Lock Point</text>
  <text x="550" y="385" font-size="16" text-anchor="middle" fill="#ffffff">⧖</text>

  <!-- Edges -->
  <path d="M400,130 L300,220" fill="none" stroke="#666" stroke-width="2" stroke-dasharray="5,5"/>
  <path d="M400,130 L500,220" fill="none" stroke="#666" stroke-width="2" stroke-dasharray="5,5"/>
  <path d="M300,270 L250,380" fill="none" stroke="#666" stroke-width="2" stroke-dasharray="5,5"/>
  <path d="M300,270 L350,380" fill="none" stroke="#666" stroke-width="2" stroke-dasharray="5,5"/>
  <path d="M500,270 L450,380" fill="none" stroke="#666" stroke-width="2" stroke-dasharray="5,5"/>
  <path d="M500,270 L550,380" fill="none" stroke="#666" stroke-width="2" stroke-dasharray="5,5"/>
  <path d="M350,400 C350,450 250,450 250,400" fill="none" stroke="#ff3333" stroke-width="2" stroke-dasharray="3,3"/><!-- Feedback Loop -->

  <!-- Tooltip Background (Initially Hidden) -->
  <rect id="tooltip-bg" x="0" y="0" width="200" height="60" fill="#2d2d2d" opacity="0"/>
  <text id="tooltip-text" x="10" y="20" font-size="12" fill="#ffffff" opacity="0"></text>

  <!-- JavaScript for Interactivity -->
  <script>
    const nodes = document.querySelectorAll('.node');
    const tooltipBg = document.getElementById('tooltip-bg');
    const tooltipText = document.getElementById('tooltip-text');

    nodes.forEach(node => {
      node.addEventListener('mouseover', (e) => {
        const metadata = {
          'cascade': 'Depth: 1\nTension: 0.2',
          'loop-tension': 'Depth: 2\nTension: 0.8',
          'meta-observer': 'Depth: 2\nTension: 0.5',
          'echo-1': 'Depth: 3\nTension: 0.3',
          'echo-2': 'Depth: 3\nTension: 0.6',
          'echo-3': 'Depth: 3\nTension: 0.4',
          'lock-point': 'Depth: 3\nTension: 0.1'
        };
        tooltipText.textContent = metadata[node.id] || 'No metadata';
        tooltipBg.setAttribute('x', e.target.getAttribute('cx') - 100);
        tooltipBg.setAttribute('y', e.target.getAttribute('cy') - 80);
        tooltipText.setAttribute('x', e.target.getAttribute('cx') - 90);
        tooltipText.setAttribute('y', e.target.getAttribute('cy') - 60);
        tooltipBg.setAttribute('opacity', '0.9');
        tooltipText.setAttribute('opacity', '1');
        node.setAttribute('r', parseFloat(node.getAttribute('r')) * 1.2); // Pulse effect
      });

      node.addEventListener('mouseout', (e) => {
        tooltipBg.setAttribute('opacity', '0');
        tooltipText.setAttribute('opacity', '0');
        node.setAttribute('r', parseFloat(node.getAttribute('r')) / 1.2); // Reset pulse
      });

      node.addEventListener('click', (e) => {
        console.log(`Node ${node.id} clicked - Metadata: ${metadata[node.id] || 'No metadata'}`);
      });
    });
  </script>
</svg>
